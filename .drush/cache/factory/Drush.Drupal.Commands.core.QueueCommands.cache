{
    "cid": "Drush\\Drupal\\Commands\\core\\QueueCommands",
    "data": {
        "getWorkerManager": {
            "schema": 4,
            "class": "Drush\\Drupal\\Commands\\core\\QueueCommands",
            "method_name": "getWorkerManager",
            "mtime": 1628851240,
            "injected_classes": []
        },
        "getQueueService": {
            "schema": 4,
            "class": "Drush\\Drupal\\Commands\\core\\QueueCommands",
            "method_name": "getQueueService",
            "mtime": 1628851240,
            "injected_classes": []
        },
        "run": {
            "schema": 4,
            "class": "Drush\\Drupal\\Commands\\core\\QueueCommands",
            "method_name": "run",
            "mtime": 1628851240,
            "injected_classes": [],
            "name": "queue:run",
            "description": "Run a specific queue by name.",
            "help": "",
            "aliases": [
                "queue-run"
            ],
            "annotations": {
                "command": "queue:run",
                "validate-queue": "name"
            },
            "example_usages": [],
            "return_type": null,
            "arguments": {
                "name": {
                    "description": "The name of the queue to run, as defined in either hook_queue_info or hook_cron_queue_info."
                }
            },
            "options": {
                "time-limit": {
                    "description": "The maximum number of seconds allowed to run the queue.",
                    "default": 2
                },
                "items-limit": {
                    "description": "The maximum number of items allowed to run the queue.",
                    "default": 2
                },
                "lease-time": {
                    "description": "The maximum number of seconds that an item remains claimed.",
                    "default": 2
                }
            }
        },
        "qList": {
            "schema": 4,
            "class": "Drush\\Drupal\\Commands\\core\\QueueCommands",
            "method_name": "qList",
            "mtime": 1628851240,
            "injected_classes": [],
            "name": "queue:list",
            "description": "Returns a list of all defined queues.",
            "help": "",
            "aliases": [
                "queue-list"
            ],
            "annotations": {
                "command": "queue:list",
                "field-labels": "\n   queue: Queue\n   items: Items\n   class: Class",
                "filter-default-field": "queue",
                "filter-output": true,
                "topics": "docs:output-formats-filters"
            },
            "example_usages": [],
            "return_type": "\\Consolidation\\OutputFormatters\\StructuredData\\RowsOfFields",
            "arguments": [],
            "options": {
                "format": {
                    "description": "",
                    "default": "table"
                }
            }
        },
        "delete": {
            "schema": 4,
            "class": "Drush\\Drupal\\Commands\\core\\QueueCommands",
            "method_name": "delete",
            "mtime": 1628851240,
            "injected_classes": [],
            "name": "queue:delete",
            "description": "Delete all items in a specific queue.",
            "help": "",
            "aliases": [
                "queue-delete"
            ],
            "annotations": {
                "command": "queue:delete",
                "validate-queue": "name"
            },
            "example_usages": [],
            "return_type": null,
            "arguments": {
                "name": {
                    "description": "The name of the queue to run, as defined in either hook_queue_info or hook_cron_queue_info."
                }
            },
            "options": []
        },
        "validateQueueName": {
            "schema": 4,
            "class": "Drush\\Drupal\\Commands\\core\\QueueCommands",
            "method_name": "validateQueueName",
            "mtime": 1628851240,
            "injected_classes": [
                "Consolidation\\AnnotatedCommand\\CommandData"
            ],
            "name": "validate:queue-name",
            "description": "Validate that queue permission exists.",
            "help": "Annotation value should be the name of the argument\/option containing the name.",
            "aliases": [],
            "annotations": {
                "hook": "validate @validate-queue"
            },
            "example_usages": [],
            "return_type": "\\Consolidation\\AnnotatedCommand\\CommandError|null",
            "arguments": {
                "commandData": {
                    "description": ""
                }
            },
            "options": []
        },
        "getQueues": {
            "schema": 4,
            "class": "Drush\\Drupal\\Commands\\core\\QueueCommands",
            "method_name": "getQueues",
            "mtime": 1628851240,
            "injected_classes": []
        },
        "getQueue": {
            "schema": 4,
            "class": "Drush\\Drupal\\Commands\\core\\QueueCommands",
            "method_name": "getQueue",
            "mtime": 1628851240,
            "injected_classes": []
        },
        "preHook": {
            "schema": 4,
            "class": "Drush\\Commands\\DrushCommands",
            "method_name": "preHook",
            "mtime": 1628851240,
            "injected_classes": [
                "Consolidation\\AnnotatedCommand\\CommandData"
            ],
            "name": "pre:hook",
            "description": "Persist commandData for use in primary command callback. Used by 'topic' commands.",
            "help": "",
            "aliases": [],
            "annotations": {
                "hook": "pre-command *"
            },
            "example_usages": [],
            "return_type": null,
            "arguments": {
                "commandData": {
                    "description": ""
                }
            },
            "options": []
        }
    },
    "created": 1632586971,
    "expire": 0
}