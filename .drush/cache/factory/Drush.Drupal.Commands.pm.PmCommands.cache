{
    "cid": "Drush\\Drupal\\Commands\\pm\\PmCommands",
    "data": {
        "getConfigFactory": {
            "schema": 4,
            "class": "Drush\\Drupal\\Commands\\pm\\PmCommands",
            "method_name": "getConfigFactory",
            "mtime": 1628851240,
            "injected_classes": []
        },
        "getModuleInstaller": {
            "schema": 4,
            "class": "Drush\\Drupal\\Commands\\pm\\PmCommands",
            "method_name": "getModuleInstaller",
            "mtime": 1628851240,
            "injected_classes": []
        },
        "getModuleHandler": {
            "schema": 4,
            "class": "Drush\\Drupal\\Commands\\pm\\PmCommands",
            "method_name": "getModuleHandler",
            "mtime": 1628851240,
            "injected_classes": []
        },
        "getThemeHandler": {
            "schema": 4,
            "class": "Drush\\Drupal\\Commands\\pm\\PmCommands",
            "method_name": "getThemeHandler",
            "mtime": 1628851240,
            "injected_classes": []
        },
        "getExtensionListModule": {
            "schema": 4,
            "class": "Drush\\Drupal\\Commands\\pm\\PmCommands",
            "method_name": "getExtensionListModule",
            "mtime": 1628851240,
            "injected_classes": []
        },
        "enable": {
            "schema": 4,
            "class": "Drush\\Drupal\\Commands\\pm\\PmCommands",
            "method_name": "enable",
            "mtime": 1628851240,
            "injected_classes": [],
            "name": "pm:enable",
            "description": "Enable one or more modules.",
            "help": "",
            "aliases": [
                "en",
                "pm-enable"
            ],
            "annotations": {
                "command": "pm:enable",
                "bootstrap": "root"
            },
            "example_usages": [],
            "return_type": null,
            "arguments": {
                "modules": {
                    "description": "A comma delimited list of modules.",
                    "default": []
                }
            },
            "options": []
        },
        "validateEnableModules": {
            "schema": 4,
            "class": "Drush\\Drupal\\Commands\\pm\\PmCommands",
            "method_name": "validateEnableModules",
            "mtime": 1628851240,
            "injected_classes": [
                "Consolidation\\AnnotatedCommand\\CommandData"
            ],
            "name": "validate:enable-modules",
            "description": "Run requirements checks on the module installation.",
            "help": "",
            "aliases": [],
            "annotations": {
                "hook": "validate pm:enable",
                "throws": [
                    "\\Drush\\Exceptions\\UserAbortException",
                    "\\Drupal\\Core\\Extension\\MissingDependencyException"
                ],
                "see": "\\drupal_check_module()"
            },
            "example_usages": [],
            "return_type": null,
            "arguments": [],
            "options": []
        },
        "uninstall": {
            "schema": 4,
            "class": "Drush\\Drupal\\Commands\\pm\\PmCommands",
            "method_name": "uninstall",
            "mtime": 1628851240,
            "injected_classes": [],
            "name": "pm:uninstall",
            "description": "Uninstall one or more modules and their dependent modules.",
            "help": "",
            "aliases": [
                "pmu",
                "pm-uninstall"
            ],
            "annotations": {
                "command": "pm:uninstall"
            },
            "example_usages": [],
            "return_type": null,
            "arguments": {
                "modules": {
                    "description": "A comma delimited list of modules.",
                    "default": []
                }
            },
            "options": []
        },
        "validateUninstall": {
            "schema": 4,
            "class": "Drush\\Drupal\\Commands\\pm\\PmCommands",
            "method_name": "validateUninstall",
            "mtime": 1628851240,
            "injected_classes": [
                "Consolidation\\AnnotatedCommand\\CommandData"
            ],
            "name": "validate:uninstall",
            "description": "",
            "help": "",
            "aliases": [],
            "annotations": {
                "hook": "validate pm-uninstall"
            },
            "example_usages": [],
            "return_type": null,
            "arguments": [],
            "options": []
        },
        "pmList": {
            "schema": 4,
            "class": "Drush\\Drupal\\Commands\\pm\\PmCommands",
            "method_name": "pmList",
            "mtime": 1628851240,
            "injected_classes": [],
            "name": "pm:list",
            "description": "Show a list of available extensions (modules and themes).",
            "help": "",
            "aliases": [
                "pml",
                "pm-list"
            ],
            "annotations": {
                "command": "pm:list",
                "field-labels": "\n   package: Package\n   project: Project\n   display_name: Name\n   name: Name\n   type: Type\n   path: Path\n   status: Status\n   version: Version",
                "default-fields": "package,display_name,status,version",
                "filter-default-field": "display_name",
                "filter-output": true,
                "topics": "docs:output-formats-filters"
            },
            "example_usages": [],
            "return_type": "\\Consolidation\\OutputFormatters\\StructuredData\\RowsOfFields",
            "arguments": [],
            "options": {
                "format": {
                    "description": "",
                    "default": "table"
                },
                "type": {
                    "description": "Only show extensions having a given type. Choices: module, theme.",
                    "default": "module,theme"
                },
                "status": {
                    "description": "Only show extensions having a given status. Choices: enabled or disabled.",
                    "default": "enabled,disabled"
                },
                "package": {
                    "description": "Only show extensions having a given project packages (e.g. Development).",
                    "default": 2
                },
                "core": {
                    "description": "Only show extensions that are in Drupal core.",
                    "default": false
                },
                "no-core": {
                    "description": "Only show extensions that are not provided by Drupal core.",
                    "default": false
                }
            }
        },
        "extensionStatus": {
            "schema": 4,
            "class": "Drush\\Drupal\\Commands\\pm\\PmCommands",
            "method_name": "extensionStatus",
            "mtime": 1628851240,
            "injected_classes": []
        },
        "addInstallDependencies": {
            "schema": 4,
            "class": "Drush\\Drupal\\Commands\\pm\\PmCommands",
            "method_name": "addInstallDependencies",
            "mtime": 1628851240,
            "injected_classes": []
        },
        "addUninstallDependencies": {
            "schema": 4,
            "class": "Drush\\Drupal\\Commands\\pm\\PmCommands",
            "method_name": "addUninstallDependencies",
            "mtime": 1628851240,
            "injected_classes": []
        },
        "preHook": {
            "schema": 4,
            "class": "Drush\\Commands\\DrushCommands",
            "method_name": "preHook",
            "mtime": 1628851240,
            "injected_classes": [
                "Consolidation\\AnnotatedCommand\\CommandData"
            ],
            "name": "pre:hook",
            "description": "Persist commandData for use in primary command callback. Used by 'topic' commands.",
            "help": "",
            "aliases": [],
            "annotations": {
                "hook": "pre-command *"
            },
            "example_usages": [],
            "return_type": null,
            "arguments": {
                "commandData": {
                    "description": ""
                }
            },
            "options": []
        }
    },
    "created": 1632586971,
    "expire": 0
}