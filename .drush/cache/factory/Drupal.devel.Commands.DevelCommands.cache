{
    "cid": "Drupal\\devel\\Commands\\DevelCommands",
    "data": {
        "getModuleHandler": {
            "schema": 4,
            "class": "Drupal\\devel\\Commands\\DevelCommands",
            "method_name": "getModuleHandler",
            "mtime": 1609375378,
            "injected_classes": []
        },
        "getEventDispatcher": {
            "schema": 4,
            "class": "Drupal\\devel\\Commands\\DevelCommands",
            "method_name": "getEventDispatcher",
            "mtime": 1609375378,
            "injected_classes": []
        },
        "getContainer": {
            "schema": 4,
            "class": "Drupal\\devel\\Commands\\DevelCommands",
            "method_name": "getContainer",
            "mtime": 1609375378,
            "injected_classes": []
        },
        "getToken": {
            "schema": 4,
            "class": "Drupal\\devel\\Commands\\DevelCommands",
            "method_name": "getToken",
            "mtime": 1609375378,
            "injected_classes": []
        },
        "reinstall": {
            "schema": 4,
            "class": "Drupal\\devel\\Commands\\DevelCommands",
            "method_name": "reinstall",
            "mtime": 1609375378,
            "injected_classes": [],
            "name": "devel:reinstall",
            "description": "Uninstall, and Install modules.",
            "help": "",
            "aliases": [
                "dre",
                "devel-reinstall"
            ],
            "annotations": {
                "command": "devel:reinstall",
                "allow-additional-options": "pm-uninstall,pm-enable"
            },
            "example_usages": [],
            "return_type": null,
            "arguments": {
                "modules": {
                    "description": "A comma-separated list of module names."
                }
            },
            "options": []
        },
        "hook": {
            "schema": 4,
            "class": "Drupal\\devel\\Commands\\DevelCommands",
            "method_name": "hook",
            "mtime": 1609375378,
            "injected_classes": [],
            "name": "devel:hook",
            "description": "List implementations of a given hook and optionally edit one.",
            "help": "",
            "aliases": [
                "fnh",
                "fn-hook",
                "hook",
                "devel-hook"
            ],
            "annotations": {
                "command": "devel:hook",
                "optionset_get_editor": ""
            },
            "example_usages": {
                "devel-hook cron": "List implementations of hook_cron()."
            },
            "return_type": null,
            "arguments": {
                "hook": {
                    "description": "The name of the hook to explore."
                },
                "implementation": {
                    "description": "The name of the implementation to edit. Usually omitted."
                }
            },
            "options": []
        },
        "hookInteract": {
            "schema": 4,
            "class": "Drupal\\devel\\Commands\\DevelCommands",
            "method_name": "hookInteract",
            "mtime": 1609375378,
            "injected_classes": [
                "Symfony\\Component\\Console\\Output\\Output",
                "Symfony\\Component\\Console\\Input\\Input"
            ],
            "name": "hook:interact",
            "description": "",
            "help": "",
            "aliases": [],
            "annotations": {
                "hook": "interact hook"
            },
            "example_usages": [],
            "return_type": null,
            "arguments": [],
            "options": []
        },
        "event": {
            "schema": 4,
            "class": "Drupal\\devel\\Commands\\DevelCommands",
            "method_name": "event",
            "mtime": 1609375378,
            "injected_classes": [],
            "name": "devel:event",
            "description": "List implementations of a given event and optionally edit one.",
            "help": "",
            "aliases": [
                "fne",
                "fn-event",
                "event"
            ],
            "annotations": {
                "command": "devel:event"
            },
            "example_usages": {
                "devel-event": "Pick a Kernel event, then pick an implementation, and then view its source code.",
                "devel-event kernel.terminate": "Pick a terminate subscribers implementation and view its source code."
            },
            "return_type": null,
            "arguments": {
                "event": {
                    "description": "The name of the event to explore. If omitted, a list of events is shown."
                },
                "implementation": {
                    "description": "The name of the implementation to show. Usually omitted."
                }
            },
            "options": []
        },
        "interactEvent": {
            "schema": 4,
            "class": "Drupal\\devel\\Commands\\DevelCommands",
            "method_name": "interactEvent",
            "mtime": 1609375378,
            "injected_classes": [
                "Symfony\\Component\\Console\\Output\\Output",
                "Symfony\\Component\\Console\\Input\\Input"
            ],
            "name": "interact:event",
            "description": "",
            "help": "",
            "aliases": [],
            "annotations": {
                "hook": "interact devel:event"
            },
            "example_usages": [],
            "return_type": null,
            "arguments": [],
            "options": []
        },
        "token": {
            "schema": 4,
            "class": "Drupal\\devel\\Commands\\DevelCommands",
            "method_name": "token",
            "mtime": 1609375378,
            "injected_classes": [],
            "name": "devel:token",
            "description": "List available tokens.",
            "help": "",
            "aliases": [
                "token",
                "devel-token"
            ],
            "annotations": {
                "command": "devel:token",
                "field-labels": "\n   group: Group\n   token: Token\n   name: Name",
                "default-fields": "group,token,name",
                "topics": "docs:output-formats-filters"
            },
            "example_usages": [],
            "return_type": "\\Consolidation\\OutputFormatters\\StructuredData\\RowsOfFields",
            "arguments": [],
            "options": {
                "format": {
                    "description": "",
                    "default": "table"
                }
            }
        },
        "uuid": {
            "schema": 4,
            "class": "Drupal\\devel\\Commands\\DevelCommands",
            "method_name": "uuid",
            "mtime": 1609375378,
            "injected_classes": [],
            "name": "devel:uuid",
            "description": "Generate a Universally Unique Identifier (UUID).",
            "help": "",
            "aliases": [
                "uuid",
                "devel-uuid"
            ],
            "annotations": {
                "command": "devel:uuid"
            },
            "example_usages": {
                "drush devel-uuid": ""
            },
            "return_type": "Drupal\\devel\\Commands\\string",
            "arguments": [],
            "options": []
        },
        "codeLocate": {
            "schema": 4,
            "class": "Drupal\\devel\\Commands\\DevelCommands",
            "method_name": "codeLocate",
            "mtime": 1609375378,
            "injected_classes": []
        },
        "services": {
            "schema": 4,
            "class": "Drupal\\devel\\Commands\\DevelCommands",
            "method_name": "services",
            "mtime": 1609375378,
            "injected_classes": [],
            "name": "devel:services",
            "description": "Get a list of available container services.",
            "help": "",
            "aliases": [
                "devel-container-services",
                "dcs",
                "devel-services"
            ],
            "annotations": {
                "command": "devel:services"
            },
            "example_usages": {
                "drush devel-services": "Gets a list of all available container services",
                "drush dcs plugin.manager": "Get all services containing \"plugin.manager\""
            },
            "return_type": "Drupal\\devel\\Commands\\array",
            "arguments": {
                "prefix": {
                    "description": "Optional prefix to filter the service list by.",
                    "default": null
                }
            },
            "options": {
                "format": {
                    "description": "",
                    "default": "yaml"
                }
            }
        },
        "preHook": {
            "schema": 4,
            "class": "Drush\\Commands\\DrushCommands",
            "method_name": "preHook",
            "mtime": 1628851240,
            "injected_classes": [
                "Consolidation\\AnnotatedCommand\\CommandData"
            ],
            "name": "pre:hook",
            "description": "Persist commandData for use in primary command callback. Used by 'topic' commands.",
            "help": "",
            "aliases": [],
            "annotations": {
                "hook": "pre-command *"
            },
            "example_usages": [],
            "return_type": null,
            "arguments": {
                "commandData": {
                    "description": ""
                }
            },
            "options": []
        }
    },
    "created": 1632744871,
    "expire": 0
}