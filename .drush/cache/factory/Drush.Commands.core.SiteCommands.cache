{
    "cid": "Drush\\Commands\\core\\SiteCommands",
    "data": {
        "siteSet": {
            "schema": 4,
            "class": "Drush\\Commands\\core\\SiteCommands",
            "method_name": "siteSet",
            "mtime": 1628851240,
            "injected_classes": [],
            "name": "site:set",
            "description": "Set a site alias that will persist for the current session.",
            "help": "Stores the site alias being used in the current session in a temporary\nfile.",
            "aliases": [
                "use",
                "site-set"
            ],
            "annotations": {
                "command": "site:set",
                "throws": "\\Exception",
                "handle-remote-commands": "",
                "validate-php-extension": "posix"
            },
            "example_usages": {
                "drush site:set @dev": "Set the current session to use the @dev alias.",
                "drush site:set user@server\/path\/to\/drupal#sitename": "Set the current session to use a remote site via site specification.",
                "drush site:set \/path\/to\/drupal#sitename": "Set the current session to use a local site via site specification.",
                "drush site:set -": "Go back to the previously-set site (like `cd -`).",
                "drush site:set": "Without an argument, any existing site becomes unset."
            },
            "return_type": null,
            "arguments": {
                "site": {
                    "description": "Site specification to use, or \u003cinfo\u003e-\u003c\/info\u003e for previous site. Omit this argument to unset.",
                    "default": "@none"
                }
            },
            "options": []
        },
        "siteAlias": {
            "schema": 4,
            "class": "Drush\\Commands\\core\\SiteCommands",
            "method_name": "siteAlias",
            "mtime": 1628851240,
            "injected_classes": [],
            "name": "site:alias",
            "description": "Show site alias details, or a list of available site aliases.",
            "help": "",
            "aliases": [
                "sa"
            ],
            "annotations": {
                "command": "site:alias",
                "throws": "\\Exception",
                "filter-default-field": "id",
                "filter-output": true,
                "topics": [
                    "docs:aliases",
                    "docs:output-formats-filters"
                ]
            },
            "example_usages": {
                "drush site:alias": "List all alias records known to drush.",
                "drush site:alias @dev": "Print an alias record for the alias 'dev'."
            },
            "return_type": "\\Consolidation\\OutputFormatters\\StructuredData\\UnstructuredListData",
            "arguments": {
                "site": {
                    "description": "Site alias or site specification.",
                    "default": null
                }
            },
            "options": {
                "format": {
                    "description": "",
                    "default": "yaml"
                }
            }
        },
        "siteAliasConvert": {
            "schema": 4,
            "class": "Drush\\Commands\\core\\SiteCommands",
            "method_name": "siteAliasConvert",
            "mtime": 1628851240,
            "injected_classes": [],
            "name": "site:alias-convert",
            "description": "Convert legacy site alias files to the new yml format.",
            "help": "",
            "aliases": [
                "sa-convert",
                "sac"
            ],
            "annotations": {
                "command": "site:alias-convert",
                "bootstrap": "max",
                "topics": "docs:aliases"
            },
            "example_usages": {
                "drush site:alias-convert": "Find legacy alias files and convert them to yml. You will be prompted for a destination directory.",
                "drush site:alias-convert --simulate": "List the files to be converted but do not actually do anything."
            },
            "return_type": "Drush\\Commands\\core\\array",
            "arguments": {
                "destination": {
                    "description": "An absolute path to a directory for writing new alias files.If omitted, user will be prompted."
                }
            },
            "options": {
                "format": {
                    "description": "",
                    "default": "yaml"
                },
                "sources": {
                    "description": "A comma delimited list of paths to search. Overrides the default paths.",
                    "default": 2
                }
            }
        },
        "interactSiteAliasConvert": {
            "schema": 4,
            "class": "Drush\\Commands\\core\\SiteCommands",
            "method_name": "interactSiteAliasConvert",
            "mtime": 1628851240,
            "injected_classes": [
                "Symfony\\Component\\Console\\Output\\Output",
                "Symfony\\Component\\Console\\Input\\Input"
            ],
            "name": "interact:site-alias-convert",
            "description": "",
            "help": "",
            "aliases": [],
            "annotations": {
                "hook": "interact site:alias-convert"
            },
            "example_usages": [],
            "return_type": null,
            "arguments": [],
            "options": []
        },
        "preHook": {
            "schema": 4,
            "class": "Drush\\Commands\\DrushCommands",
            "method_name": "preHook",
            "mtime": 1628851240,
            "injected_classes": [
                "Consolidation\\AnnotatedCommand\\CommandData"
            ],
            "name": "pre:hook",
            "description": "Persist commandData for use in primary command callback. Used by 'topic' commands.",
            "help": "",
            "aliases": [],
            "annotations": {
                "hook": "pre-command *"
            },
            "example_usages": [],
            "return_type": null,
            "arguments": {
                "commandData": {
                    "description": ""
                }
            },
            "options": []
        }
    },
    "created": 1632579118,
    "expire": 0
}